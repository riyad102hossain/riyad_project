// <auto-generated />
using System;
using G_Store;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G_Store.Migrations
{
    [DbContext(typeof(GS_Dbcontext))]
    partial class GS_DbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("G_Store.Customer", b =>
                {
                    b.Property<int>("cus_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cus_id"));

                    b.Property<string>("cus_add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cus_contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("due")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cus_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("G_Store.Inventory", b =>
                {
                    b.Property<int>("pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pro_id"));

                    b.Property<DateTime>("doe")
                        .HasColumnType("datetime2");

                    b.Property<string>("pro_cat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("selling_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("pro_id");

                    b.ToTable("Inventorys");
                });

            modelBuilder.Entity("G_Store.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("P_Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("S_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("cus_id")
                        .HasColumnType("int");

                    b.Property<int>("pro_id")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("cus_id");

                    b.HasIndex("pro_id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("G_Store.Supplie", b =>
                {
                    b.Property<int>("pro_id")
                        .HasColumnType("int");

                    b.Property<int>("sup_id")
                        .HasColumnType("int");

                    b.Property<int>("P_Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("pro_id", "sup_id");

                    b.HasIndex("SaleId");

                    b.HasIndex("sup_id");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("G_Store.Supplier", b =>
                {
                    b.Property<int>("sup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sup_id"));

                    b.Property<string>("sup_com")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sup_contact")
                        .HasColumnType("int");

                    b.Property<string>("sup_location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sup_id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("G_Store.Sale", b =>
                {
                    b.HasOne("G_Store.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G_Store.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("pro_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("G_Store.Supplie", b =>
                {
                    b.HasOne("G_Store.Sale", null)
                        .WithMany("Supplies")
                        .HasForeignKey("SaleId");

                    b.HasOne("G_Store.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("pro_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G_Store.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("sup_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("G_Store.Sale", b =>
                {
                    b.Navigation("Supplies");
                });
#pragma warning restore 612, 618
        }
    }
}
